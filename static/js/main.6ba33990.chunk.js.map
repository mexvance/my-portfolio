{"version":3,"sources":["logo.svg","components/headbar.jsx","components/resume.jsx","components/homepage.jsx","components/portfolio.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","withRouter","props","Navbar","bg","variant","expand","Toggle","aria-controls","Collapse","id","Nav","className","to","Brand","Link","Resume","HomePage","onMouseMove","event","xPos","pageX","yPos","pageY","currentTarget","style","backgroundPosition","paralaxMove","src","logo","alt","href","target","rel","Portfolio","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2HAAAA,EAAOC,QAAU,IAA0B,kC,0OC6B5BC,eAvBC,SAAAC,GACZ,OACE,gCACE,gBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MACtC,gBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,gBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAClB,gBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,gBAAC,gBAAD,CAAeC,GAAG,KAChB,gBAACV,EAAA,EAAOW,MAAR,CAAcF,UAAU,SAAxB,kBAEF,gBAAC,gBAAD,CAAeC,GAAG,WAChB,gBAACF,EAAA,EAAII,KAAL,gBAEF,gBAAC,gBAAD,CAAeF,GAAG,cAChB,gBAACF,EAAA,EAAII,KAAL,0BCmBDC,G,MApCA,SAAAd,GACX,OACI,gCACA,uBAAKU,UAAU,aACZ,uBAAKA,UAAU,WACV,uBAAKA,UAAU,QAAf,iBAGA,uBAAKA,UAAU,eACf,uBAAKA,UAAU,eACf,+CACA,2BAAK,2BAFL,KAIA,2BAJA,aAMA,2BANA,QAQA,2BARA,OAUA,2BAVA,MAYA,2BAZA,MAcA,2BAdA,OAiBA,uBAAKA,UAAU,gBAAf,iC,iBCMDK,EA/BE,SAAAf,GASb,OACI,gCACA,uBAAKU,UAAU,WACf,uBAAKF,GAAG,UAAUE,UAAU,UAAUM,YAAa,SAAAC,GAAK,OAX1C,SAAAA,GAClB,IAAIC,EAAOD,EAAME,MACbC,EAAOH,EAAMI,MACjBJ,EAAMK,cAAcC,MAAMC,mBAAqBN,EAAK,EAAI,MAAQE,EAAK,EAAI,MAC1BF,EAAK,EAAI,MAAQE,EAAK,EAAI,KAOXK,CAAYR,KACtE,uBAAKS,IAAKC,IAAMjB,UAAU,WAAWkB,IAAI,SACzC,6DAGA,qBACElB,UAAU,WACVmB,KAAK,+BACLC,OAAO,SACPC,IAAI,uBAJN,wBCXOC,EARG,SAAAhC,GACd,OACI,0D,MCmBOiC,MAff,WACE,OACE,yBAAKvB,UAAU,OACf,kBAAC,EAAD,MACE,4BAAQA,UAAU,cAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,IAAIC,UAAWrB,IACjC,kBAAC,IAAD,CAAOoB,KAAK,UAAUC,UAAWtB,IACjC,kBAAC,IAAD,CAAOqB,KAAK,aAAaC,UAAWJ,QCJxBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OACL,kBAAC,aAAD,KACI,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6ba33990.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport '../css/headbar.css';\r\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nconst HeadBar = props =>{\r\n    return(\r\n      <>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand className=\"brand\">Michael Vance</Navbar.Brand>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/resume\">\r\n                <Nav.Link>Resume</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/portfolio\">\r\n                <Nav.Link>Portfolio</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default withRouter(HeadBar);","import * as React from \"react\";\r\nimport '../css/resume.css';\r\n\r\nconst Resume = props =>{\r\n    return(\r\n        <>\r\n        <div className=\"bodyblock\">\r\n           <div className=\"PageBox\">\r\n                <div className=\"head\">\r\n                    Michael Vance\r\n                </div>\r\n                <div className=\"mainContent\">\r\n                <div className=\"LeftSideBox\">\r\n                <strong>My Languages:</strong>\r\n                <br/><br/>\r\n                C#\r\n                <br/>\r\n                Javascript\r\n                <br/>\r\n                React\r\n                <br/>\r\n                HTML \r\n                <br/>\r\n                CSS \r\n                <br/>\r\n                C++\r\n                <br/>\r\n                Git\r\n                </div>\r\n                <div className=\"RightSideBox\">\r\n                    More info to come soon!\r\n                </div>\r\n                </div>\r\n           </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Resume;","import * as React from \"react\";\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nconst HomePage = props =>{\r\n  const paralaxMove = event =>{\r\n    let xPos = event.pageX;\r\n    let yPos = event.pageY;\r\n    event.currentTarget.style.backgroundPosition = xPos/3 + \"px \" + yPos/3 + \"px,\" +\r\n                                                   xPos/6 + \"px \" + yPos/6 + \"px\";\r\n                                                   //xPos/12 + \"px \" + yPos/12 + \"px\";\r\n  }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"part-00\">\r\n        <div id=\"part-01\" className=\"part-01\" onMouseMove={event=>paralaxMove(event)}>\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          My Portfolio, More to come soon!\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://github.com/mexvance/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Visit my Github!\r\n        </a>\r\n        </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import * as React from 'react';\r\n\r\nconst Portfolio = props=> {\r\n    return(\r\n        <>\r\n        This is the portfolio\r\n        </>\r\n    );  \r\n};\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport './App.css';\r\nimport HeadBar from './components/headbar.jsx';\r\nimport Resume from './components/resume.jsx';\r\nimport HomePage from './components/homepage.jsx';\r\nimport Portfolio from './components/portfolio.jsx';\r\nimport {Route, Switch} from \"react-router\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <HeadBar/>\r\n      <header className=\"App-header\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage}/>\r\n        <Route path=\"/resume\" component={Resume}/>\r\n        <Route path=\"/portfolio\" component={Portfolio}/>\r\n      </Switch>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}