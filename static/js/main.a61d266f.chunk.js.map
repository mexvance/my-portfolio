{"version":3,"sources":["resources/projects/greenbeancard.PNG","resources/projects/portfoliocard.PNG","resources/projects/pokeguicard.PNG","resources/projects/aspCMScard.PNG","mikeIcon.jpg","components/headbar.jsx","components/about.jsx","components/homepage.jsx","components/shared/projectCard.jsx","components/shared/projectListLocal.js","components/projects.jsx","components/projectPages/aspCMS.jsx","components/projectPages/greenbean.jsx","components/projectPages/personalPortfolio.jsx","components/projectPages/pokedex.jsx","ProjectRoutingComponent.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","withRouter","props","className","Navbar","bg","variant","expand","Toggle","aria-controls","Collapse","id","Nav","to","Brand","Link","onClick","linkName","history","push","About","HomePage","ref","React","onMouseMove","event","xPos","pageX","yPos","pageY","currentTarget","style","backgroundPosition","paralaxMove","href","type","current","scrollIntoView","behavior","block","src","logo","alt","isShown","setIsShown","onMouseEnter","onMouseLeave","project","backgroundImage","TransitionGroup","CSSTransition","in","timeout","classNames","unmountOnExit","projectList","GreenBean","Portfolio","pokeGUI","aspCMS","Projects","projectArray","map","key","AspCMS","fontSize","aspCMSMainImage","margin","window","open","GreenBeanMainImage","PersonalPortfolio","PortfolioMainImage","Pokedex","pokeGUIMainImage","ProjectRoutingComponent","path","component","App","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a61d266f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/greenbeancard.1ea098ee.PNG\";","module.exports = __webpack_public_path__ + \"static/media/portfoliocard.4886f69a.PNG\";","module.exports = __webpack_public_path__ + \"static/media/pokeguicard.e039ffff.PNG\";","module.exports = __webpack_public_path__ + \"static/media/aspCMScard.3d750296.PNG\";","module.exports = __webpack_public_path__ + \"static/media/mikeIcon.2e81db28.jpg\";","import * as React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport \"../css/headbar.scss\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nconst HeadBar = props => {\r\n  const pushLink = linkName => {\r\n    props.history.push(linkName);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sticky\">\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"navbar\">\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand className=\"brand\">Michael Vance</Navbar.Brand>\r\n              </LinkContainer>\r\n              {/* <LinkContainer to=\"/about\">\r\n                <Nav.Link>About</Nav.Link>\r\n              </LinkContainer> */}\r\n              <LinkContainer to=\"/projects\">\r\n                <Nav.Link bg=\"dark\" onClick={() => pushLink(\"/projects\")}>\r\n                  Projects\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(HeadBar);\r\n","import * as React from \"react\";\r\nimport \"../css/about.scss\";\r\n\r\nconst About = props => {\r\n  return (\r\n    <>\r\n      <div className=\"bodyblock\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import * as React from \"react\";\r\nimport logo from \"../mikeIcon.jpg\";\r\nimport \"../App.scss\";\r\nimport \"../css/homepage.scss\";\r\nimport HeadBar from \"./headbar.jsx\";\r\nimport { MdArrowForward } from \"react-icons/md\";\r\nconst HomePage = props => {\r\n  const ref = React.createRef();\r\n  const paralaxMove = event => {\r\n    let xPos = event.pageX;\r\n    let yPos = event.pageY;\r\n    event.currentTarget.style.backgroundPosition =\r\n      -xPos / 90 + \"px \" + -yPos / 200 + \"px\";\r\n  };\r\n  const handleClick = () => {\r\n    ref.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\"\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"background\">\r\n        <div className=\"part-00\">\r\n          <div\r\n            id=\"part-01\"\r\n            className=\"part-01\"\r\n            onMouseMove={event => paralaxMove(event)}\r\n          >\r\n            <div className=\"flex\">\r\n              <p className=\"title\">\r\n                <div>I Believe</div>\r\n                <span>Code</span> should bring <span>People</span> together\r\n              </p>\r\n              <p className=\"title2\"></p>\r\n              <div className=\"buttonBackground\">\r\n                <div\r\n                  href=\"about\"\r\n                  className=\"button\"\r\n                  type=\"button\"\r\n                  onClick={() => handleClick()}\r\n                >\r\n                  Let me show you why\r\n                  <span className=\"arrowIcon\">\r\n                    <MdArrowForward className=\"icon\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div ref={ref} className=\"sticky\">\r\n          <HeadBar />\r\n        </div>\r\n        <div id=\"about\" className=\"About-Me\">\r\n          <div className=\"About-Me2\">\r\n            <div className=\"About-Title flex\">\r\n              <div>WHY I WRITE CODE</div>\r\n              <div className=\"title-bar\"></div>\r\n            </div>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <div className=\"About-Description flex\">\r\n              <div className=\"separator-bar\"></div>\r\n              <div className=\"about-content\">\r\n                <p className=\"description-title\">Hi, I'm Mike Vance, </p>\r\n                <p>\r\n                  I develop code because I want to help people connect and\r\n                  improve their lives through technology.\r\n                </p>\r\n                <p>\r\n                  I love creating solutions to problems that help bring people\r\n                  together and make their lives easier.\r\n                </p>\r\n                <p>\r\n                  To accomplish this goal, I have learned to use many different\r\n                  tools such as C#, C++, Javascript, React, and much more.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import * as React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport \"../../css/projects.scss\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst ProjectCard = props => {\r\n  const [isShown, setIsShown] = React.useState(false);\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"grid-item clickableBox\"\r\n        onMouseEnter={() => setIsShown(true)}\r\n        onMouseLeave={() => setIsShown(false)}\r\n        // onClick={()=>{window.open(props.project[2], '_blank')}}>\r\n        onClick={() => {\r\n          props.history.push(`/projects/${props.project[4]}`);\r\n        }}\r\n        //onClick=()=>\r\n      >\r\n        <div\r\n          className=\"projectCard\"\r\n          style={{ backgroundImage: `url(${props.project[3]})` }}\r\n        ></div>\r\n        <TransitionGroup>\r\n          <div className=\"cardTitle\">\r\n            {props.project[0]}\r\n            <br />\r\n            <CSSTransition\r\n              in={isShown}\r\n              timeout={100}\r\n              classNames=\"display\"\r\n              unmountOnExit\r\n            >\r\n              <div className=\"cardDescription\">{props.project[1]}</div>\r\n            </CSSTransition>\r\n          </div>\r\n        </TransitionGroup>\r\n        <div className=\"overlay\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProjectCard);\r\n","import GreenBean from \"../../resources/projects/greenbeancard.PNG\";\r\nimport Portfolio from \"../../resources/projects/portfoliocard.PNG\";\r\nimport pokeGUI from \"../../resources/projects/pokeguicard.PNG\";\r\nimport aspCMS from \"../../resources/projects/aspCMScard.PNG\";\r\n\r\nconst projectList = [\r\n  [\r\n    \"Project GreenBean\",\r\n    \"Project GreenBean is a React/Redux/Electron app that solves the need for finding recipes through easy search options.\",\r\n    \"https://github.com/mexvance/Project_GreenBean\",\r\n    GreenBean,\r\n    \"greenbean\"\r\n  ],\r\n  [\r\n    \"Personal Portfolio\",\r\n    \"Created with React/HTML/CSS/JS to form a simple single page web application to show my projects, hosted on GitHub pages\",\r\n    \"https://mexvance.github.io\",\r\n    Portfolio,\r\n    \"PersonalPortfolio\"\r\n  ],\r\n  [\r\n    \"Pokemon GUI\",\r\n    \"Created with XAML in C#, integrates with REST APIs as well as integration with PDF and Excel formats\",\r\n    \"https://github.com/mexvance/PokeGUI\",\r\n    pokeGUI,\r\n    \"Pokedex\"\r\n  ],\r\n  [\r\n    \"ASP.NET CMS\",\r\n    \"Created with C# and ASP.NET, This project has user authentication, a postgres database, SignalR, and much more\",\r\n    \"https://github.com/mexvance/CMSWebPageCreator\",\r\n    aspCMS,\r\n    \"AspCMS\"\r\n  ]\r\n];\r\n\r\nexport default projectList;\r\n","import * as React from \"react\";\r\nimport \"../css/projects.scss\";\r\nimport ProjectCard from \"./shared/projectCard.jsx\";\r\nimport projectArray from \"./shared/projectListLocal\";\r\n\r\nconst Projects = props => {\r\n  return (\r\n    <>\r\n      <div className=\"projectPageBody\">\r\n        <div className=\"title\">Here are some of my recent projects:</div>\r\n        <div className=\"grid-container\">\r\n          {projectArray.map((project, key) => (\r\n            <ProjectCard project={project} key={key} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Projects;\r\n","import * as React from \"react\";\r\nimport \"../../css/projects.scss\";\r\nimport aspCMSMainImage from \"../../resources/projects/aspCMScard.PNG\";\r\n\r\nconst AspCMS = props => {\r\n  return (\r\n    <>\r\n      <div style={{ fontSize: \"1.5em\" }}>ASP.NET CMS website</div>\r\n      <div>\r\n        <img src={aspCMSMainImage} alt=\"\"></img>\r\n      </div>\r\n      <div style={{ fontSize: \"1em\" }}>Page content to come soon!</div>\r\n      <div style={{ margin: \"1em\" }}>\r\n        For now feel free to visit this project on my Github!\r\n      </div>\r\n      <div>\r\n        <button\r\n          className=\"githubButton\"\r\n          onClick={() => {\r\n            window.open(\r\n              \"https://github.com/mexvance/CMSWebPageCreator\",\r\n              \"_blank\"\r\n            );\r\n          }}\r\n        >\r\n          ASP.NET CMS on Github\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AspCMS;\r\n","import * as React from \"react\";\r\n\r\nimport GreenBeanMainImage from \"../../resources/projects/greenbeancard.PNG\";\r\n\r\nconst GreenBean = props => {\r\n  return (\r\n    <>\r\n      <div style={{ fontSize: \"1.5em\" }}>Green Bean - Desktop Recipe App</div>\r\n      <div>\r\n        <img src={GreenBeanMainImage} alt=\"\"></img>\r\n      </div>\r\n      <div style={{ fontSize: \"1em\" }}>Page content to come soon!</div>\r\n      <div style={{ margin: \"1em\" }}>\r\n        For now feel free to visit this project on my Github!\r\n      </div>\r\n      <div>\r\n        <button\r\n          className=\"githubButton\"\r\n          onClick={() => {\r\n            window.open(\r\n              \"https://github.com/mexvance/Project_GreenBean\",\r\n              \"_blank\"\r\n            );\r\n          }}\r\n        >\r\n          Project GreenBean on Github\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GreenBean;\r\n","import * as React from \"react\";\r\nimport PortfolioMainImage from \"../../resources/projects/portfoliocard.PNG\";\r\n\r\nconst PersonalPortfolio = props => {\r\n  return (\r\n    <>\r\n      <div style={{ fontSize: \"1.5em\" }}>Personal Portfolio website</div>\r\n      <div>\r\n        <img src={PortfolioMainImage} alt=\"\"></img>\r\n      </div>\r\n      <div style={{ fontSize: \"1em\" }}>Page content to come soon!</div>\r\n      <div style={{ margin: \"1em\" }}>\r\n        For now feel free to visit this project on my Github!\r\n      </div>\r\n      <div>\r\n        <button\r\n          className=\"githubButton\"\r\n          onClick={() => {\r\n            window.open(\"https://github.com/mexvance/my-portfolio\", \"_blank\");\r\n          }}\r\n        >\r\n          My-Portfolio on Github\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonalPortfolio;\r\n","import * as React from \"react\";\r\nimport pokeGUIMainImage from \"../../resources/projects/pokeguicard.PNG\";\r\n\r\nconst Pokedex = props => {\r\n  return (\r\n    <>\r\n      <div style={{ fontSize: \"1.5em\" }}>Pokedex UWP App</div>\r\n      <div>\r\n        <img src={pokeGUIMainImage} alt=\"\"></img>\r\n      </div>\r\n      <div style={{ fontSize: \"1em\" }}>Page content to come soon!</div>\r\n      <div style={{ margin: \"1em\" }}>\r\n        For now feel free to visit this project on my Github!\r\n      </div>\r\n      <div>\r\n        <button\r\n          className=\"githubButton\"\r\n          onClick={() => {\r\n            window.open(\"https://github.com/mexvance/PokeGUI\", \"_blank\");\r\n          }}\r\n        >\r\n          PokeGui on Github\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport AspCMS from \"./components/projectPages/aspCMS.jsx\";\r\nimport GreenBean from \"./components/projectPages/greenbean.jsx\";\r\nimport PersonalPortfolio from \"./components/projectPages/personalPortfolio.jsx\";\r\nimport Pokedex from \"./components/projectPages/pokedex.jsx\";\r\n\r\nconst ProjectRoutingComponent = props => {\r\n  return (\r\n    <>\r\n      <Route path=\"/projects/aspCMS\" component={AspCMS} />\r\n      <Route path=\"/projects/greenbean\" component={GreenBean} />\r\n      <Route path=\"/projects/personalPortfolio\" component={PersonalPortfolio} />\r\n      <Route path=\"/projects/pokedex\" component={Pokedex} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectRoutingComponent;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport HeadBar from \"./components/headbar.jsx\";\r\nimport About from \"./components/about.jsx\";\r\nimport HomePage from \"./components/homepage.jsx\";\r\nimport Projects from \"./components/projects.jsx\";\r\nimport ProjectRoutingComponent from \"./ProjectRoutingComponent.jsx\";\r\n\r\nimport { Route, Switch } from \"react-router\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-body\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <div>\r\n            <Route path=\"/about\" component={About} />\r\n            <HeadBar />\r\n            <Route exact path=\"/projects\" component={Projects} />\r\n            <ProjectRoutingComponent />\r\n          </div>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n//import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n//import blue from '@material-ui/core/colors/lightBlue';\n// const theme = () => {\n//   return(createMuiTheme({\n//     palette: {\n//       primary: {\n//         ...blue,\n//         '500': '#01579B'\n//       }\n//     }\n//   }));\n// }\n\nReactDOM.render(\n  // <MuiThemeProvider theme={theme}>\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  // </MuiThemeProvider>\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}