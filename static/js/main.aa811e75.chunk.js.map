{"version":3,"sources":["mikeIcon.jpg","resources/projects/greenbeancard.PNG","resources/projects/portfoliocard.PNG","resources/projects/pokeguicard.PNG","resources/projects/aspCMScard.PNG","components/headbar.jsx","components/about.jsx","components/homepage.jsx","components/shared/projectCard.jsx","components/shared/projectListLocal.js","components/projects.jsx","components/shared/projectDetails.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","withRouter","props","Navbar","bg","variant","expand","className","Toggle","aria-controls","Collapse","id","Nav","to","Brand","Link","About","HomePage","ref","React","onMouseMove","event","xPos","pageX","yPos","pageY","currentTarget","style","backgroundPosition","paralaxMove","href","type","onClick","current","scrollIntoView","behavior","block","src","logo","alt","ProjectCard","isShown","setIsShown","onMouseEnter","onMouseLeave","project","TransitionGroup","CSSTransition","in","timeout","classNames","unmountOnExit","projectList","GreenBean","Portfolio","pokeGUI","aspCMS","Projects","projectArray","map","key","ProjectDetails","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","theme","createMuiTheme","palette","primary","blue","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa811e75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mikeIcon.2e81db28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/greenbeancard.1ea098ee.PNG\";","module.exports = __webpack_public_path__ + \"static/media/portfoliocard.4886f69a.PNG\";","module.exports = __webpack_public_path__ + \"static/media/pokeguicard.e039ffff.PNG\";","module.exports = __webpack_public_path__ + \"static/media/aspCMScard.3d750296.PNG\";","import * as React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport '../css/headbar.css';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nconst HeadBar = props =>{\r\n    return(\r\n      <>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"navbar\">\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand className=\"brand\">Michael Vance</Navbar.Brand>\r\n              </LinkContainer>\r\n              {/* <LinkContainer to=\"/about\">\r\n                <Nav.Link>About</Nav.Link>\r\n              </LinkContainer> */}\r\n              <LinkContainer to=\"/projects\">\r\n                <Nav.Link>Projects</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default withRouter(HeadBar);","import * as React from \"react\";\r\nimport '../css/about.css';\r\n\r\nconst About = props =>{\r\n    return(\r\n        <>\r\n        <div className=\"bodyblock\">\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default About;","import * as React from \"react\";\r\nimport logo from '../mikeIcon.jpg';\r\nimport '../App.css';\r\nimport '../css/homepage.css';\r\nimport { MdArrowForward } from \"react-icons/md\";\r\nconst HomePage = props =>{\r\n  \r\n  const ref = React.createRef();\r\n  const paralaxMove = event =>{\r\n    let xPos = event.pageX;\r\n    let yPos = event.pageY;\r\n    event.currentTarget.style.backgroundPosition = -xPos/4 + \"px \" + -yPos/4 + \"px,\" +\r\n                                                   xPos/12 + \"px \" + yPos/12 + \"px\";\r\n  } \r\n  const handleClick = () =>{\r\n    ref.current.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'start',\r\n        });;\r\n    // event.current.scrollIntoView({\r\n    //   behavior: 'smooth',\r\n    //   block: 'start',\r\n    // });\r\n  };\r\n  return(\r\n      <>\r\n      <div className=\"part-00\">\r\n        <div id=\"part-01\" className=\"part-01\" onMouseMove={ref=>paralaxMove(ref)}>\r\n        \r\n          <div className=\"flex\">\r\n          \r\n            <p className=\"title\">\r\n              Hi, I'm <span>Mike Vance</span> \r\n            </p>\r\n            <p className=\"title2\">I'm a Software Developer</p>\r\n            <div href=\"about\" className=\"button\" type=\"button\"\r\n            onClick={(event) => handleClick(event)}>\r\n              About Me \r\n              <span className=\"arrowIcon\">\r\n                <MdArrowForward className=\"icon\"/>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"about\" ref={ref} className=\"About-Me\">\r\n      <div className=\"About-Title flex\">\r\n      <div>ABOUT</div>\r\n      <div className=\"title-bar\"></div>\r\n      </div>\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n      <div className=\"About-Description flex\">\r\n      <div className=\"separator-bar\"></div>\r\n      <p>Hi, I'm Mike. I'm a Software Engineer/Developer, skilled in C#, C++, React, and much more.</p>\r\n      <p> I work hard to create clean, professional, functional software and websites.</p>\r\n      </div>\r\n\r\n      </div>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import * as React from \"react\";\r\nimport '../../css/projects.css';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nconst ProjectCard = props =>{\r\n    const [isShown, setIsShown] = React.useState(false);\r\n    return(\r\n        <>\r\n        <div className=\"grid-item clickableBox\" \r\n            onMouseEnter={() => setIsShown(true)}\r\n            onMouseLeave={() => setIsShown(false)}\r\n            // onClick={()=>{window.open(props.project[2], '_blank')}}>\r\n            // onClick={()=>{props.history.push(`/projects/${props.project[3]}`)}}\r\n            //onClick=()=>\r\n            >\r\n        <div className=\"projectCard\" style={{\"backgroundImage\":`url(${props.project[3]})`}}>\r\n        </div>\r\n        <TransitionGroup>\r\n        <div className=\"cardTitle\">\r\n            {props.project[0]}\r\n            <br/>\r\n                <CSSTransition\r\n                    in={isShown}\r\n                    timeout={100}\r\n                    classNames=\"display\"\r\n                    unmountOnExit\r\n                    >\r\n                <div className=\"cardDescription\">\r\n                {props.project[1]}\r\n                </div>\r\n                </CSSTransition>\r\n        </div>\r\n        </TransitionGroup>\r\n        <div className=\"overlay\"></div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProjectCard;","import GreenBean from \"../../resources/projects/greenbeancard.PNG\"\r\nimport Portfolio from \"../../resources/projects/portfoliocard.PNG\"\r\nimport pokeGUI from \"../../resources/projects/pokeguicard.PNG\"\r\nimport aspCMS from \"../../resources/projects/aspCMScard.PNG\"\r\n\r\nconst projectList = [\r\n  [\"Project GreenBean\",\r\n        \"Project GreenBean is a React/Redux/Electron app that solves the need for finding recipes through easy search options.\", \r\n        \"https://github.com/mexvance/Project_GreenBean\", \r\n        GreenBean,\r\n        \"greenbean\"],\r\n  [\"Personal Portfolio\", \r\n        \"Created with React/HTML/CSS/JS to form a simple single page web application to show my projects, hosted on GitHub pages\", \r\n        \"https://mexvance.github.io\", \r\n        Portfolio,\r\n        \"portfolio\"],\r\n  [\"Pokemon GUI\", \r\n        \"Created with XAML in C#, integrates with REST APIs as well as integration with PDF and Excel formats\", \r\n        \"https://github.com/mexvance/PokeGUI\", \r\n        pokeGUI,\r\n        \"pokegui\"],\r\n    [\"ASP.NET CMS\", \r\n        \"Created with C# and ASP.NET, This project has user authentication, a postgres database, SignalR, and much more\", \r\n        \"https://github.com/mexvance/CMSWebPageCreator\", \r\n        aspCMS,\r\n        \"pokegui\"]\r\n];\r\n\r\nexport default projectList;\r\n","import * as React from 'react';\r\nimport \"../css/projects.css\";\r\nimport ProjectCard from \"./shared/projectCard.jsx\";\r\nimport projectArray from \"./shared/projectListLocal\";\r\n\r\nconst Projects = props=> {\r\n    return(\r\n        <>\r\n        <div className=\"projectPageBody\">\r\n        <div className=\"title\">Here are some of my recent projects:</div>\r\n        <div className=\"grid-container\">\r\n          {projectArray.map((project, key) => (\r\n            <ProjectCard project={project} key={key} />\r\n          ))}\r\n        </div>\r\n        </div>\r\n        </>\r\n    );  \r\n};\r\n export default Projects;","import * as React from \"react\";\r\n\r\nconst ProjectDetails = props =>{\r\n    return(\r\n        <>\r\n            details page\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProjectDetails;","import React from 'react';\r\nimport './App.css';\r\nimport HeadBar from './components/headbar.jsx';\r\nimport About from './components/about.jsx';\r\nimport HomePage from './components/homepage.jsx';\r\nimport Projects from './components/projects.jsx';\r\n\r\nimport ProjectDetails from './components/shared/projectDetails.jsx';\r\nimport {Route, Switch} from \"react-router\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    \r\n      <HeadBar/>\r\n      <div className=\"App-body\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage}/>\r\n            <Route path=\"/about\" component={About}/>\r\n            <Route path=\"/projects\" component={Projects}/>\r\n            <Route path=\"/projects/projectDetails\" component={ProjectDetails}/>\r\n          </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/lightBlue';\nconst theme = () => {\n  return(createMuiTheme({\n    palette: {\n      primary: {\n        ...blue,\n        '500': '#01579B'\n      }\n    }\n  }));\n}\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n    <HashRouter>\n        <App />\n    </HashRouter>\n    </MuiThemeProvider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}